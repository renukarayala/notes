Roboshop e-commerce project
============================

Database
App/Backend tier
Frontend

MySQL -> RDBMS tables and columns. strict format

Product -> name, description, vendor data, faq, reviews, ratings, price, discount, emi options, etc.

data is in documents format, access is little fast compare to SQL
MongoDB is popular NoSQL database. 
key -> value

{
	"name": "some food",
	"price": "123INR",
	"description": "food products daily consumable",
	"expiry": "01-01-2026"
}

{
	"name": "a toy",
	"price": "123INR",
	"description": "food products daily consumable",
	"subscription": "yes, montly"
}

/etc/yum.repos.d/

MongoDB -> 27017

127.0.0.1:27017 -> only localhost
0.0.0.0

useradd --system --home /app --shell /sbin/nologin --comment "roboshop system user" roboshop

/etc/systemd/system/catalogue.service

[Unit]
Description = Catalogue Service

[Service]
User=roboshop
Environment=MONGO=true
// highlight-start
Environment=MONGO_URL="mongodb://<MONGODB-SERVER-IPADDRESS>:27017/catalogue"
// highlight-end
ExecStart=/bin/node /app/server.js
SyslogIdentifier=catalogue

[Install]
WantedBy=multi-user.target



[ root@ip-172-31-30-128 ~ ]# curl -v http://localhost:8080/health
*   Trying ::1:8080...
* Connected to localhost (::1) port 8080 (#0)
> GET /health HTTP/1.1
> Host: localhost:8080
> User-Agent: curl/7.76.1
> Accept: */*
>
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< X-Powered-By: Express
< Timing-Allow-Origin: *
< Access-Control-Allow-Origin: *
< Content-Type: application/json; charset=utf-8
< Content-Length: 25
< ETag: W/"19-lxLecms+EooPZfmeTebCy69HUmE"
< Date: Wed, 17 Sep 2025 18:49:40 GMT
< Connection: keep-alive
< Keep-Alive: timeout=5
<
* Connection #0 to host localhost left intact
{"app":"OK","mongo":true}
13.222.163.235 | 172.31.30.128 | t3.micro | null


[ root@ip-172-31-25-110 ~ ]# telnet mongodb.daws.life 27017
Trying 172.31.25.110...
Connected to mongodb.daws.life.
Escape character is '^]'.



[ root@ip-172-31-27-120 ~ ]# telnet redis.daws.life 6379
Trying 172.31.27.120...
Connected to redis.daws.life.
Escape character is '^]'.
-DENIED Redis is running in protected mode because protected mode is enabled and no password is set for the default user. In this mode connections are only accepted from the loopback interface. If you want to connect from external computers to Redis you may adopt one of the following solutions: 1) Just disable protected mode sending the command 'CONFIG SET protected-mode no' from the loopback interface by connecting to Redis from the same host the server is running, however MAKE SURE Redis is not publicly accessible from internet if you do so. Use CONFIG REWRITE to make this change permanent. 2) Alternatively you can just disable the protected mode by editing the Redis configuration file, and setting the protected mode option to 'no', and then restarting the server. 3) If you started the server manually just for testing, restart it with the '--protected-mode no' option. 4) Set up an authentication password for the default user. NOTE: You only need to do one of the above things in order for the server to start accepting connections from the outside.
Connection closed by foreign host.









[ root@ip-172-31-21-32 ~ ]# curl -v http://catalogue.daws.life:8080/health
*   Trying 172.31.30.128:8080...
* Connected to catalogue.daws.life (172.31.30.128) port 8080 (#0)
> GET /health HTTP/1.1
> Host: catalogue.daws.life:8080
> User-Agent: curl/7.76.1
> Accept: */*
>
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< X-Powered-By: Express
< Timing-Allow-Origin: *
< Access-Control-Allow-Origin: *
< Content-Type: application/json; charset=utf-8
< Content-Length: 25
< ETag: W/"19-lxLecms+EooPZfmeTebCy69HUmE"
< Date: Wed, 17 Sep 2025 19:04:39 GMT
< Connection: keep-alive
< Keep-Alive: timeout=5
<
* Connection #0 to host catalogue.daws.life left intact
{"app":"OK","mongo":true}


http://daws.life/api/catalogue/products/Artificial%20Intelligence

Redis
=======
cache in memory data base

disk(HD) --> RAM --> App can access

applications -> Database time taking process

applications -> cache -> database --> store in cache --> show to user

CM --> PA

person --> PA --> CM

ctrl + ]
quit